#include<iostream>
#include<string>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<fstream>
#include<sstream>

using namespace std;

class CSVLoader
{
	ifstream reader;
	long long row = 0;
	long long col = 0;
	string file;
	vector<string>v;
	vector<string>label;
	string** mat;
public:
	CSVLoader(string file)
	{
		ifstream read;
		string l;
		this->file = file;
	}
	~CSVLoader()
	{
		v.clear();
		label.clear();
		mat = nullptr;
		file = nullptr;
		reader.clear();
		reader.close();

	}
	void Load();
	int Find_Column_Label(string str);
	long long getRow(){ return row; }
	//vector<string>getData(){ return v; }
	long long getCol(){ return col; }
	string** loadData();
};

void CSVLoader::Load()
{
	string line;

	if (reader.bad())
	{
		cout << "Couldn't open file" << endl;
	}
	else
	{
		reader.open(file, ios::in);
		string line;
		while (getline(reader, line))
		{
			stringstream ss(line);
			string str;
			col = 0;
			while (getline(ss, str, ','))
			{
				v.push_back(str);
				col++;
			}

			row++;
		}
		line.clear();
		reader.close();
	}
}

int CSVLoader::Find_Column_Label(string str)
{
	auto itr = find_if(v.begin(), v.end(), [=](string s){return s == str; });
	int dist = distance(v.begin(), itr);
	*itr = nullptr;
	return dist;
}


string** CSVLoader::loadData()
{
	mat = new string*[getRow()];
	for (int i = 0; i < getRow(); i++)
	{
		mat[i] = new string[getCol()];
	}


	int index = 0;
	for (int i = 0; i < getRow(); i++)
	{
		for (int j = 0; j < getCol(); j++)
		{
			mat[i][j] = v[index];
			index++;
		}
	}
	index = 0;
	return mat;
}


int main()
{

	CSVLoader* file = new CSVLoader("F:\\CSV Files\\FL_insurance_sample.csv");
	file->Load();
	//to get a row no
	int row = file->getRow();
	//to get col no
	int col = file->getCol();
	//to find a colum position use
	//int pos = file->Find_Column_Label("your_column_name");
	//to load the data into application and show it to a tabular format use
	string **mat = file->loadData();
	//to show the data use this format
	for (int i = 0; i < file->getRow() - 1; i++)
	{
		for (int j = 0; j < file->getCol(); j++)
		{
			cout << mat[i + 1][j] << " ";//i+1 cause for i=0 all the name of the column data.
		}
		cout << endl;
	}

	return 0;
}
