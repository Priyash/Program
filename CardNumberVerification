#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstdio>
#include<conio.h>

using namespace std;

int to_digit(char ch)
{
	return ch - '0';
}

//Luhn Algorithm 

int main()
{
	string s = "9130 1001 1933 124";
	vector<int>v;
	s.erase(remove_if(s.begin(), s.end(),isspace), s.end());
	int checksum = 0;
	int size = s.length();
	auto sm_of_digit = [](int a)->int
	{
		int sum = 0;
		while (a > 0)
		{
			int res = a % 10;
			sum += res;
			a = a / 10;
		}

		return sum;
	};

	//if the total digit is even in an account number
	if (size % 2 == 0)
	{
		for (int i = s.length() - 1; i >= 0; i--)
		{
			if (i % 2 != 0)
			{
				v.push_back(to_digit(s[i]));
			}
			else
			{
				int res = to_digit(s[i]);
				int double_res = res * 2;
				if (double_res > 9)
				{
					v.push_back(sm_of_digit(double_res));
				}
				else
				{
					v.push_back(double_res);
				}
			}
		}
	}
	else                                                        //if total number of digit is odd in an account number
	{
		for (int i = 0; i < s.length(); i++)
		{
			if (i % 2 == 0)
			{
				v.push_back(to_digit(s[i]));
			}
			else
			{
				int res = to_digit(s[i]);
				int double_res = res * 2;
				if (double_res > 9)
				{
					v.push_back(sm_of_digit(double_res));
				}
				else
				{
					v.push_back(double_res);
				}
			}
		}
	}
	int sum = 0;
	for (auto i : v)
	{
		sum += i;
	}

	checksum = (sum * 9) % 10;   //checksum is obtained by this formula provided by luhn
	if (sum % 10 == checksum)
	{
		cout << "Card is Valid" << endl;
	}
	else
	{
		cout << "Card is Invalid" << endl;
	}

	_getch();
	return 0;

}
